{"ast":null,"code":"var _jsxFileName = \"/Users/valentinflausse/Desktop/Dossier Archerie/commande-app/src/components/CommandeView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CSVImporter from \"./CSVImporter\";\n\n// Parser générique pour un <product> ou <combination> dans du XML\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction parseXMLToObject(xmlString, tag) {\n  if (!xmlString) return null;\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(xmlString, \"application/xml\");\n  const el = doc.querySelector(tag);\n  if (!el) return null;\n  const getText = t => {\n    var _el$querySelector;\n    return ((_el$querySelector = el.querySelector(t)) === null || _el$querySelector === void 0 ? void 0 : _el$querySelector.textContent.trim()) || \"\";\n  };\n  return {\n    id: getText(\"id\"),\n    wholesale_price: parseFloat(getText(\"wholesale_price\") || \"0\"),\n    price: parseFloat(getText(\"price\") || \"0\"),\n    quantity: parseInt(getText(\"quantity\") || \"0\", 10)\n  };\n}\n\n// ─── fetchProductOrCombination mis à jour ────────────────────────────────────────\nasync function fetchProductOrCombination(reference) {\n  // 1) Tentative Produit\n  let res = await fetch(`http://localhost:4000/api/product/${encodeURIComponent(reference)}`);\n  let xml = await res.text();\n  let p = parseXMLToObject(xml, \"product\");\n  if (p !== null && p !== void 0 && p.id) {\n    // on a ID, prix et quantité “brute”\n    var prestaId = p.id;\n    var isCombination = false;\n    var purchasePrice = p.wholesale_price;\n    var salePrice = p.price;\n  } else {\n    // 2) Fallback Combination\n    res = await fetch(`http://localhost:4000/api/combination/${encodeURIComponent(reference)}`);\n    xml = await res.text();\n    let c = parseXMLToObject(xml, \"combination\");\n    if (c !== null && c !== void 0 && c.id) {\n      // on récupère prix du parent\n      res = await fetch(`http://localhost:4000/api/combination-full/${encodeURIComponent(reference)}`);\n      xml = await res.text();\n      let pr = parseXMLToObject(xml, \"product\") || {\n        wholesale_price: 0,\n        price: 0\n      };\n      prestaId = c.id;\n      isCombination = true;\n      purchasePrice = pr.wholesale_price;\n      salePrice = pr.price;\n    } else {\n      // rien trouvé\n      return {\n        prestaId: null,\n        isCombination: false,\n        purchasePrice: 0,\n        salePrice: 0,\n        stock: 0\n      };\n    }\n  }\n\n  // 3) Appel stock_availables pour récupérer la vraie quantité\n  let stock = 0;\n  try {\n    const type = isCombination ? \"combination\" : \"product\";\n    const stockRes = await fetch(`http://localhost:4000/api/stock/${type}/${prestaId}`);\n    if (stockRes.ok) {\n      const {\n        quantity\n      } = await stockRes.json();\n      stock = quantity;\n    }\n  } catch (e) {\n    console.warn(\"Erreur fetch stock_available:\", e);\n  }\n  return {\n    prestaId,\n    isCombination,\n    purchasePrice,\n    salePrice,\n    stock\n  };\n}\n// Calcule le taux de marge brute\nfunction calcMarge(pvHT, paHT) {\n  return pvHT > 0 ? ((pvHT - paHT) / pvHT * 100).toFixed(1) + \"%\" : \"❌\";\n}\n\n// Envoie la mise à jour stock via ton API proxy\nasync function updateStock(prestaId, qtyToAdd, currentStock, isCombination) {\n  try {\n    const resp = await fetch(\"http://localhost:4000/api/update-stock\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id: prestaId,\n        quantity: qtyToAdd,\n        currentStock,\n        isCombination\n      })\n    });\n    const text = await resp.text();\n    if (!resp.ok) {\n      alert(`❌ Mise à jour échouée (code ${resp.status}):\\n${text}`);\n    } else {\n      alert(`✅ Stock mis à jour (ID ${prestaId}):\\n${text}`);\n    }\n  } catch (e) {\n    alert(`❌ Erreur réseau: ${e.message}`);\n  }\n}\nexport default function CommandeView() {\n  _s();\n  const [produits, setProduits] = useState([]);\n  const enrichWithAPI = async rows => {\n    const data = await Promise.all(rows.map(async row => {\n      // Adaptation selon ton CSVImporter : assure-toi que ces clés existent\n      const reference = row[\"No. d'article\"] || row.reference;\n      const titre = row.Titre;\n      const brand = row.Brand;\n      const prixCSV = parseFloat(row.prix) || 0;\n      const quantite = parseInt(row[\"qté.\"] || row.quantite || \"0\", 10);\n      const api = await fetchProductOrCombination(reference);\n      return {\n        reference,\n        titre,\n        brand,\n        prixCSV,\n        quantite,\n        prestaId: api.prestaId,\n        isCombination: api.isCombination,\n        stock: api.stock,\n        prixAchat: api.purchasePrice,\n        prixVenteHT: api.salePrice,\n        tauxMarge: calcMarge(api.salePrice, api.purchasePrice)\n      };\n    }));\n    setProduits(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-7xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Commande Produits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CSVImporter, {\n      onDataLoaded: enrichWithAPI\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full bg-white border border-gray-300 rounded-lg text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"R\\xE9f\\xE9rence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Nom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Marque\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Prix (CSV)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Quantit\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Prix achat Presta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Prix vente HT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Taux de marge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: produits.map((p, i) => {\n            var _p$prixCSV, _p$prixAchat, _p$prixVenteHT;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"border-t\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: p.reference\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: p.titre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: p.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: ((_p$prixCSV = p.prixCSV) !== null && _p$prixCSV !== void 0 ? _p$prixCSV : 0).toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: p.quantite\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: p.stock\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: ((_p$prixAchat = p.prixAchat) !== null && _p$prixAchat !== void 0 ? _p$prixAchat : 0).toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: ((_p$prixVenteHT = p.prixVenteHT) !== null && _p$prixVenteHT !== void 0 ? _p$prixVenteHT : 0).toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: p.tauxMarge\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"bg-blue-600 text-white px-2 py-1 rounded hover:bg-blue-700\",\n                  onClick: () => updateStock(p.prestaId, p.quantite, p.stock, p.isCombination),\n                  children: \"MAJ Stock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 7\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 5\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(CommandeView, \"AjUil42FoNew40r9nrnsF1dN9/A=\");\n_c = CommandeView;\nvar _c;\n$RefreshReg$(_c, \"CommandeView\");","map":{"version":3,"names":["React","useState","CSVImporter","jsxDEV","_jsxDEV","parseXMLToObject","xmlString","tag","parser","DOMParser","doc","parseFromString","el","querySelector","getText","t","_el$querySelector","textContent","trim","id","wholesale_price","parseFloat","price","quantity","parseInt","fetchProductOrCombination","reference","res","fetch","encodeURIComponent","xml","text","p","prestaId","isCombination","purchasePrice","salePrice","c","pr","stock","type","stockRes","ok","json","e","console","warn","calcMarge","pvHT","paHT","toFixed","updateStock","qtyToAdd","currentStock","resp","method","headers","body","JSON","stringify","alert","status","message","CommandeView","_s","produits","setProduits","enrichWithAPI","rows","data","Promise","all","map","row","titre","Titre","brand","Brand","prixCSV","prix","quantite","api","prixAchat","prixVenteHT","tauxMarge","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDataLoaded","i","_p$prixCSV","_p$prixAchat","_p$prixVenteHT","onClick","_c","$RefreshReg$"],"sources":["/Users/valentinflausse/Desktop/Dossier Archerie/commande-app/src/components/CommandeView.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport CSVImporter from \"./CSVImporter\";\n\n// Parser générique pour un <product> ou <combination> dans du XML\nfunction parseXMLToObject(xmlString, tag) {\n  if (!xmlString) return null;\n  const parser = new DOMParser();\n  const doc    = parser.parseFromString(xmlString, \"application/xml\");\n  const el     = doc.querySelector(tag);\n  if (!el) return null;\n  const getText = t => el.querySelector(t)?.textContent.trim() || \"\";\n  return {\n    id:              getText(\"id\"),\n    wholesale_price: parseFloat(getText(\"wholesale_price\") || \"0\"),\n    price:           parseFloat(getText(\"price\")           || \"0\"),\n    quantity:        parseInt(  getText(\"quantity\")        || \"0\", 10)\n  };\n}\n\n// ─── fetchProductOrCombination mis à jour ────────────────────────────────────────\nasync function fetchProductOrCombination(reference) {\n  // 1) Tentative Produit\n  let res = await fetch(`http://localhost:4000/api/product/${encodeURIComponent(reference)}`);\n  let xml = await res.text();\n  let p   = parseXMLToObject(xml, \"product\");\n  if (p?.id) {\n    // on a ID, prix et quantité “brute”\n    var prestaId      = p.id;\n    var isCombination = false;\n    var purchasePrice = p.wholesale_price;\n    var salePrice     = p.price;\n  } else {\n    // 2) Fallback Combination\n    res = await fetch(`http://localhost:4000/api/combination/${encodeURIComponent(reference)}`);\n    xml = await res.text();\n    let c = parseXMLToObject(xml, \"combination\");\n    if (c?.id) {\n      // on récupère prix du parent\n      res    = await fetch(`http://localhost:4000/api/combination-full/${encodeURIComponent(reference)}`);\n      xml    = await res.text();\n      let pr = parseXMLToObject(xml, \"product\") || { wholesale_price:0, price:0 };\n      prestaId      = c.id;\n      isCombination = true;\n      purchasePrice = pr.wholesale_price;\n      salePrice     = pr.price;\n    } else {\n      // rien trouvé\n      return { prestaId: null, isCombination: false, purchasePrice: 0, salePrice: 0, stock: 0 };\n    }\n  }\n\n  // 3) Appel stock_availables pour récupérer la vraie quantité\n  let stock = 0;\n  try {\n    const type = isCombination ? \"combination\" : \"product\";\n    const stockRes = await fetch(`http://localhost:4000/api/stock/${type}/${prestaId}`);\n    if (stockRes.ok) {\n      const { quantity } = await stockRes.json();\n      stock = quantity;\n    }\n  } catch (e) {\n    console.warn(\"Erreur fetch stock_available:\", e);\n  }\n\n  return { prestaId, isCombination, purchasePrice, salePrice, stock };\n}\n// Calcule le taux de marge brute\nfunction calcMarge(pvHT, paHT) {\n  return pvHT > 0\n    ? (((pvHT - paHT) / pvHT) * 100).toFixed(1) + \"%\"\n    : \"❌\";\n}\n\n// Envoie la mise à jour stock via ton API proxy\nasync function updateStock(prestaId, qtyToAdd, currentStock, isCombination) {\n  try {\n    const resp = await fetch(\"http://localhost:4000/api/update-stock\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ id: prestaId, quantity: qtyToAdd, currentStock, isCombination })\n    });\n    const text = await resp.text();\n    if (!resp.ok) {\n      alert(`❌ Mise à jour échouée (code ${resp.status}):\\n${text}`);\n    } else {\n      alert(`✅ Stock mis à jour (ID ${prestaId}):\\n${text}`);\n    }\n  } catch (e) {\n    alert(`❌ Erreur réseau: ${e.message}`);\n  }\n}\n\nexport default function CommandeView() {\n  const [produits, setProduits] = useState([]);\n\n  const enrichWithAPI = async (rows) => {\n    const data = await Promise.all(\n      rows.map(async (row) => {\n        // Adaptation selon ton CSVImporter : assure-toi que ces clés existent\n        const reference = row[\"No. d'article\"] || row.reference;\n        const titre     = row.Titre;\n        const brand     = row.Brand;\n        const prixCSV   = parseFloat(row.prix) || 0;\n        const quantite  = parseInt(row[\"qté.\"] || row.quantite || \"0\", 10);\n\n        const api = await fetchProductOrCombination(reference);\n\n        return {\n          reference,\n          titre,\n          brand,\n          prixCSV,\n          quantite,\n          prestaId:      api.prestaId,\n          isCombination: api.isCombination,\n          stock:         api.stock,\n          prixAchat:     api.purchasePrice,\n          prixVenteHT:   api.salePrice,\n          tauxMarge:     calcMarge(api.salePrice, api.purchasePrice)\n        };\n      })\n    );\n    setProduits(data);\n  };\n\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto\">\n      <h1 className=\"text-3xl font-bold mb-6\">Commande Produits</h1>\n      <CSVImporter onDataLoaded={enrichWithAPI} />\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full bg-white border border-gray-300 rounded-lg text-sm\">\n          <thead className=\"bg-gray-100\">\n            <tr>\n              <th className=\"px-4 py-2\">Référence</th>\n              <th className=\"px-4 py-2\">Nom</th>\n              <th className=\"px-4 py-2\">Marque</th>\n              <th className=\"px-4 py-2\">Prix (CSV)</th>\n              <th className=\"px-4 py-2\">Quantité</th>\n              <th className=\"px-4 py-2\">Stock</th>\n              <th className=\"px-4 py-2\">Prix achat Presta</th>\n              <th className=\"px-4 py-2\">Prix vente HT</th>\n              <th className=\"px-4 py-2\">Taux de marge</th>\n              <th className=\"px-4 py-2\">Action</th>\n            </tr>\n          </thead>\n        <tbody>\n  {produits.map((p, i) => (\n    <tr key={i} className=\"border-t\">\n      <td className=\"px-4 py-2\">{p.reference}</td>\n      <td className=\"px-4 py-2\">{p.titre}</td>\n      <td className=\"px-4 py-2\">{p.brand}</td>\n      <td className=\"px-4 py-2\">{(p.prixCSV ?? 0).toFixed(2)}</td>\n      <td className=\"px-4 py-2\">{p.quantite}</td>\n      <td className=\"px-4 py-2\">{p.stock}</td>\n      <td className=\"px-4 py-2\">{(p.prixAchat ?? 0).toFixed(2)}</td>\n      <td className=\"px-4 py-2\">{(p.prixVenteHT ?? 0).toFixed(2)}</td>\n      <td className=\"px-4 py-2\">{p.tauxMarge}</td>\n      <td className=\"px-4 py-2\">\n        <button\n          className=\"bg-blue-600 text-white px-2 py-1 rounded hover:bg-blue-700\"\n          onClick={() =>\n            updateStock(p.prestaId, p.quantite, p.stock, p.isCombination)\n          }\n        >\n          MAJ Stock\n        </button>\n      </td>\n    </tr>\n  ))}\n</tbody>\n\n        </table>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}