{"ast":null,"code":"var _jsxFileName = \"/Users/valentinflausse/Desktop/Dossier Archerie/commande-app/src/components/CommandeView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CSVImporter from \"./CSVImporter\";\n\n// ─── Helper pour parser un <product> ou <combination> depuis un string XML ─────────────────\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction parseXMLToObject(xmlString, tag) {\n  if (!xmlString) return null;\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(xmlString, \"application/xml\");\n  const el = doc.querySelector(tag);\n  if (!el) return null;\n  const getText = t => {\n    var _el$querySelector;\n    return ((_el$querySelector = el.querySelector(t)) === null || _el$querySelector === void 0 ? void 0 : _el$querySelector.textContent.trim()) || \"\";\n  };\n  return {\n    id: getText(\"id\"),\n    wholesale_price: parseFloat(getText(\"wholesale_price\") || \"0\"),\n    price: parseFloat(getText(\"price\") || \"0\"),\n    quantity: parseInt(getText(\"quantity\") || \"0\", 10)\n  };\n}\n\n// ─── Récupère un produit ou une combinaison, renvoie { prestaId, isCombination, purchasePrice, salePrice, stock } ─────────────────\nasync function fetchProductOrCombination(reference) {\n  const safeFetchText = async url => {\n    try {\n      const res = await fetch(url);\n      return res.ok ? await res.text() : null;\n    } catch {\n      return null;\n    }\n  };\n\n  // 1) Essayer comme produit\n  let xml = await safeFetchText(`http://localhost:4000/api/product/${encodeURIComponent(reference)}`);\n  let p = parseXMLToObject(xml, \"product\");\n  if (p !== null && p !== void 0 && p.id) {\n    return {\n      prestaId: p.id,\n      isCombination: false,\n      purchasePrice: p.wholesale_price,\n      salePrice: p.price,\n      stock: p.quantity\n    };\n  }\n\n  // 2) Essayer comme combinaison\n  xml = await safeFetchText(`http://localhost:4000/api/combination/${encodeURIComponent(reference)}`);\n  let c = parseXMLToObject(xml, \"combination\");\n  if (c !== null && c !== void 0 && c.id) {\n    // récupérer le parent pour les prix\n    const parentXml = await safeFetchText(`http://localhost:4000/api/combination-full/${encodeURIComponent(reference)}`);\n    const pr = parseXMLToObject(parentXml, \"product\") || {\n      wholesale_price: 0,\n      price: 0\n    };\n    return {\n      prestaId: c.id,\n      isCombination: true,\n      purchasePrice: pr.wholesale_price,\n      salePrice: pr.price,\n      stock: c.quantity\n    };\n  }\n\n  // 3) Rien trouvé → valeurs par défaut\n  return {\n    prestaId: null,\n    isCombination: false,\n    purchasePrice: 0,\n    salePrice: 0,\n    stock: 0\n  };\n}\n\n// ─── Calcule le taux de marge brute ──────────────────────────────────────────────────────────\nfunction calcMarge(pvHT, paHT) {\n  return pvHT > 0 ? ((pvHT - paHT) / pvHT * 100).toFixed(1) + \"%\" : \"–\";\n}\n\n// ─── Envoie la mise à jour de stock via l’API ─────────────────────────────────────────────────\nasync function updateStock(prestaId, qty, currentStock, isCombination) {\n  try {\n    const res = await fetch(\"http://localhost:4000/api/update-stock\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id: prestaId,\n        quantity: qty,\n        currentStock,\n        isCombination\n      })\n    });\n    const text = await res.text();\n    if (!res.ok) {\n      alert(`❌ MAJ stock échouée (${res.status})\\n${text}`);\n    } else {\n      alert(`✅ MAJ stock OK\\n${text}`);\n    }\n  } catch (e) {\n    alert(`❌ Erreur réseau: ${e.message}`);\n  }\n}\nexport default function CommandeView() {\n  _s();\n  const [produits, setProduits] = useState([]);\n\n  // Handler pour éditer la quantité en local\n  const onChangeQuantite = (index, newQty) => {\n    setProduits(prev => prev.map((p, i) => i === index ? {\n      ...p,\n      quantite: newQty\n    } : p));\n  };\n  const enrichWithAPI = async rows => {\n    if (rows.length === 0) return;\n\n    // Détection élargie des colonnes CSV\n    const headers = Object.keys(rows[0]);\n    const detect = pattern => headers.find(h => new RegExp(pattern, \"i\").test(h)) || \"\";\n    const refKey = detect(\"^ref\");\n    const titreKey = detect(\"titre|name\");\n    const brandKey = detect(\"brand\");\n    const prixKey = detect(\"^prix|price\");\n    const qteKey = detect(\"qt[eé]|\\bqty\\b|quantit\");\n    const data = await Promise.all(rows.map(async row => {\n      var _row$refKey, _row$titreKey, _row$brandKey;\n      const reference = (_row$refKey = row[refKey]) !== null && _row$refKey !== void 0 ? _row$refKey : \"\";\n      const titre = (_row$titreKey = row[titreKey]) !== null && _row$titreKey !== void 0 ? _row$titreKey : \"\";\n      const brand = (_row$brandKey = row[brandKey]) !== null && _row$brandKey !== void 0 ? _row$brandKey : \"\";\n      const prixCSV = parseFloat(row[prixKey] || \"0\");\n      const quantite = parseInt(row[qteKey] || \"0\", 10);\n      const api = await fetchProductOrCombination(reference);\n      return {\n        reference,\n        titre,\n        brand,\n        prixCSV,\n        quantite,\n        ...api,\n        tauxMarge: calcMarge(api.salePrice, api.purchasePrice)\n      };\n    }));\n    setProduits(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-7xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Commande Produits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CSVImporter, {\n      onDataLoaded: enrichWithAPI\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full bg-white border border-gray-300 rounded-lg text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"R\\xE9f\\xE9rence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Nom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Marque\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Prix CSV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Qt\\xE9 CSV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Prix achat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Prix vente HT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Marge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: produits.map((p, i) => {\n            var _p$prixCSV, _p$purchasePrice, _p$salePrice;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"border-t\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: p.reference\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: p.titre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: p.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: ((_p$prixCSV = p.prixCSV) !== null && _p$prixCSV !== void 0 ? _p$prixCSV : 0).toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  className: \"w-16 border rounded px-1\",\n                  value: p.quantite,\n                  onChange: e => onChangeQuantite(i, parseInt(e.target.value, 10) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: p.stock\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: ((_p$purchasePrice = p.purchasePrice) !== null && _p$purchasePrice !== void 0 ? _p$purchasePrice : 0).toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: ((_p$salePrice = p.salePrice) !== null && _p$salePrice !== void 0 ? _p$salePrice : 0).toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: p.tauxMarge\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"bg-blue-600 text-white px-2 py-1 rounded hover:bg-blue-700\",\n                  onClick: () => updateStock(p.prestaId, p.quantite, p.stock, p.isCombination),\n                  children: \"MAJ Stock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(CommandeView, \"AjUil42FoNew40r9nrnsF1dN9/A=\");\n_c = CommandeView;\nvar _c;\n$RefreshReg$(_c, \"CommandeView\");","map":{"version":3,"names":["React","useState","CSVImporter","jsxDEV","_jsxDEV","parseXMLToObject","xmlString","tag","parser","DOMParser","doc","parseFromString","el","querySelector","getText","t","_el$querySelector","textContent","trim","id","wholesale_price","parseFloat","price","quantity","parseInt","fetchProductOrCombination","reference","safeFetchText","url","res","fetch","ok","text","xml","encodeURIComponent","p","prestaId","isCombination","purchasePrice","salePrice","stock","c","parentXml","pr","calcMarge","pvHT","paHT","toFixed","updateStock","qty","currentStock","method","headers","body","JSON","stringify","alert","status","e","message","CommandeView","_s","produits","setProduits","onChangeQuantite","index","newQty","prev","map","i","quantite","enrichWithAPI","rows","length","Object","keys","detect","pattern","find","h","RegExp","test","refKey","titreKey","brandKey","prixKey","qteKey","data","Promise","all","row","_row$refKey","_row$titreKey","_row$brandKey","titre","brand","prixCSV","api","tauxMarge","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDataLoaded","_p$prixCSV","_p$purchasePrice","_p$salePrice","type","min","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/Users/valentinflausse/Desktop/Dossier Archerie/commande-app/src/components/CommandeView.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport CSVImporter from \"./CSVImporter\";\n\n// ─── Helper pour parser un <product> ou <combination> depuis un string XML ─────────────────\nfunction parseXMLToObject(xmlString, tag) {\n  if (!xmlString) return null;\n  const parser = new DOMParser();\n  const doc    = parser.parseFromString(xmlString, \"application/xml\");\n  const el     = doc.querySelector(tag);\n  if (!el) return null;\n  const getText = t => el.querySelector(t)?.textContent.trim() || \"\";\n  return {\n    id:              getText(\"id\"),\n    wholesale_price: parseFloat(getText(\"wholesale_price\") || \"0\"),\n    price:           parseFloat(getText(\"price\")           || \"0\"),\n    quantity:        parseInt(  getText(\"quantity\")        || \"0\", 10)\n  };\n}\n\n// ─── Récupère un produit ou une combinaison, renvoie { prestaId, isCombination, purchasePrice, salePrice, stock } ─────────────────\nasync function fetchProductOrCombination(reference) {\n  const safeFetchText = async url => {\n    try {\n      const res = await fetch(url);\n      return res.ok ? await res.text() : null;\n    } catch {\n      return null;\n    }\n  };\n\n  // 1) Essayer comme produit\n  let xml = await safeFetchText(`http://localhost:4000/api/product/${encodeURIComponent(reference)}`);\n  let p   = parseXMLToObject(xml, \"product\");\n  if (p?.id) {\n    return {\n      prestaId:      p.id,\n      isCombination: false,\n      purchasePrice: p.wholesale_price,\n      salePrice:     p.price,\n      stock:         p.quantity\n    };\n  }\n\n  // 2) Essayer comme combinaison\n  xml = await safeFetchText(`http://localhost:4000/api/combination/${encodeURIComponent(reference)}`);\n  let c = parseXMLToObject(xml, \"combination\");\n  if (c?.id) {\n    // récupérer le parent pour les prix\n    const parentXml = await safeFetchText(`http://localhost:4000/api/combination-full/${encodeURIComponent(reference)}`);\n    const pr        = parseXMLToObject(parentXml, \"product\") || { wholesale_price: 0, price: 0 };\n    return {\n      prestaId:      c.id,\n      isCombination: true,\n      purchasePrice: pr.wholesale_price,\n      salePrice:     pr.price,\n      stock:         c.quantity\n    };\n  }\n\n  // 3) Rien trouvé → valeurs par défaut\n  return {\n    prestaId:      null,\n    isCombination: false,\n    purchasePrice: 0,\n    salePrice:     0,\n    stock:         0\n  };\n}\n\n// ─── Calcule le taux de marge brute ──────────────────────────────────────────────────────────\nfunction calcMarge(pvHT, paHT) {\n  return pvHT > 0\n    ? (((pvHT - paHT) / pvHT) * 100).toFixed(1) + \"%\"\n    : \"–\";\n}\n\n// ─── Envoie la mise à jour de stock via l’API ─────────────────────────────────────────────────\nasync function updateStock(prestaId, qty, currentStock, isCombination) {\n  try {\n    const res  = await fetch(\"http://localhost:4000/api/update-stock\", {\n      method:  \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body:    JSON.stringify({ id: prestaId, quantity: qty, currentStock, isCombination })\n    });\n    const text = await res.text();\n    if (!res.ok) {\n      alert(`❌ MAJ stock échouée (${res.status})\\n${text}`);\n    } else {\n      alert(`✅ MAJ stock OK\\n${text}`);\n    }\n  } catch (e) {\n    alert(`❌ Erreur réseau: ${e.message}`);\n  }\n}\n\nexport default function CommandeView() {\n  const [produits, setProduits] = useState([]);\n\n  // Handler pour éditer la quantité en local\n  const onChangeQuantite = (index, newQty) => {\n    setProduits(prev =>\n      prev.map((p, i) =>\n        i === index\n          ? { ...p, quantite: newQty }\n          : p\n      )\n    );\n  };\n\n  const enrichWithAPI = async (rows) => {\n    if (rows.length === 0) return;\n\n    // Détection élargie des colonnes CSV\n    const headers = Object.keys(rows[0]);\n    const detect = pattern =>\n      headers.find(h => new RegExp(pattern, \"i\").test(h)) || \"\";\n\n    const refKey   = detect(\"^ref\");\n    const titreKey = detect(\"titre|name\");\n    const brandKey = detect(\"brand\");\n    const prixKey  = detect(\"^prix|price\");\n    const qteKey   = detect(\"qt[eé]|\\bqty\\b|quantit\");\n\n    const data = await Promise.all(\n      rows.map(async row => {\n        const reference = row[refKey]   ?? \"\";\n        const titre     = row[titreKey] ?? \"\";\n        const brand     = row[brandKey] ?? \"\";\n        const prixCSV   = parseFloat(row[prixKey]   || \"0\");\n        const quantite  = parseInt(  row[qteKey]     || \"0\", 10);\n\n        const api = await fetchProductOrCombination(reference);\n\n        return {\n          reference,\n          titre,\n          brand,\n          prixCSV,\n          quantite,\n          ...api,\n          tauxMarge: calcMarge(api.salePrice, api.purchasePrice)\n        };\n      })\n    );\n\n    setProduits(data);\n  };\n\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto\">\n      <h1 className=\"text-3xl font-bold mb-6\">Commande Produits</h1>\n      <CSVImporter onDataLoaded={enrichWithAPI} />\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full bg-white border border-gray-300 rounded-lg text-sm\">\n          <thead className=\"bg-gray-100\">\n            <tr>\n              <th className=\"px-4 py-2\">Référence</th>\n              <th className=\"px-4 py-2\">Nom</th>\n              <th className=\"px-4 py-2\">Marque</th>\n              <th className=\"px-4 py-2\">Prix CSV</th>\n              <th className=\"px-4 py-2\">Qté CSV</th>\n              <th className=\"px-4 py-2\">Stock</th>\n              <th className=\"px-4 py-2\">Prix achat</th>\n              <th className=\"px-4 py-2\">Prix vente HT</th>\n              <th className=\"px-4 py-2\">Marge</th>\n              <th className=\"px-4 py-2\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {produits.map((p, i) => (\n              <tr key={i} className=\"border-t\">\n                <td className=\"px-4 py-2\">{p.reference}</td>\n                <td className=\"px-4 py-2\">{p.titre}</td>\n                <td className=\"px-4 py-2\">{p.brand}</td>\n                <td className=\"px-4 py-2\">{(p.prixCSV ?? 0).toFixed(2)}</td>\n                <td className=\"px-4 py-2\">\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    className=\"w-16 border rounded px-1\"\n                    value={p.quantite}\n                    onChange={e => onChangeQuantite(i, parseInt(e.target.value, 10) || 0)}\n                  />\n                </td>\n                <td className=\"px-4 py-2\">{p.stock}</td>\n                <td className=\"px-4 py-2\">{(p.purchasePrice ?? 0).toFixed(2)}</td>\n                <td className=\"px-4 py-2\">{(p.salePrice     ?? 0).toFixed(2)}</td>\n                <td className=\"px-4 py-2\">{p.tauxMarge}</td>\n                <td className=\"px-4 py-2\">\n                  <button\n                    className=\"bg-blue-600 text-white px-2 py-1 rounded hover:bg-blue-700\"\n                    onClick={() =>\n                      updateStock(p.prestaId, p.quantite, p.stock, p.isCombination)\n                    }\n                  >\n                    MAJ Stock\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}