{"ast":null,"code":"var _jsxFileName = \"/Users/valentinflausse/Desktop/Dossier Archerie/commande-app/src/components/CommandeView.jsx\",\n  _s = $RefreshSig$();\n// Code fourni par l'utilisateur\n\nimport React, { useState } from \"react\";\nimport CSVImporter from \"./CSVImporter\";\n\n// Assure-toi d'avoir parseXMLToObject défini plus haut, par exemple :\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction parseXMLToObject(xmlString, type = 'product') {\n  const parser = new DOMParser();\n  const xml = parser.parseFromString(xmlString, 'application/xml');\n  const item = xml.querySelector(type);\n  if (!item) return null;\n  const getText = tag => {\n    var _item$querySelector;\n    return ((_item$querySelector = item.querySelector(tag)) === null || _item$querySelector === void 0 ? void 0 : _item$querySelector.textContent.trim()) || '';\n  };\n  return {\n    id: getText('id'),\n    // Ces deux champs sont sous <wholesale_price> et <price> côté product, ou pas exposés côté combination\n    wholesale_price: parseFloat(getText('wholesale_price') || '0'),\n    price: parseFloat(getText('price') || '0'),\n    quantity: parseInt(getText('quantity') || '0', 10)\n  };\n}\nasync function fetchProductOrCombination(reference) {\n  // Helper pour parser un <product> ou <combination> depuis un XML string\n  function parseXMLToObject(xmlString, tag) {\n    if (!xmlString) return null;\n    const parser = new DOMParser();\n    const xml = parser.parseFromString(xmlString, 'application/xml');\n    const item = xml.querySelector(tag);\n    if (!item) return null;\n    const getText = t => {\n      var _item$querySelector2;\n      return ((_item$querySelector2 = item.querySelector(t)) === null || _item$querySelector2 === void 0 ? void 0 : _item$querySelector2.textContent.trim()) || '';\n    };\n    return {\n      id: getText('id'),\n      wholesale_price: parseFloat(getText('wholesale_price') || '0'),\n      price: parseFloat(getText('price') || '0'),\n      quantity: parseInt(getText('quantity') || '0', 10)\n    };\n  }\n\n  // 1) Préparation\n  let prestaId = null;\n  let isCombination = false;\n  let purchasePrice = 0;\n  let salePrice = 0;\n  let stock = 0;\n  const fetchXML = async url => {\n    try {\n      const res = await fetch(url);\n      if (!res.ok) return null;\n      return await res.text();\n    } catch {\n      return null;\n    }\n  };\n\n  // 2) Tenter produit simple\n  const prodXML = await fetchXML(`http://localhost:4000/api/product/${encodeURIComponent(reference)}`);\n  const prodParsed = parseXMLToObject(prodXML, 'product');\n  if (prodParsed && prodParsed.id) {\n    prestaId = prodParsed.id;\n    purchasePrice = prodParsed.wholesale_price;\n    salePrice = prodParsed.price;\n  } else {\n    // 3) Sinon tenter combination\n    const comboXML = await fetchXML(`http://localhost:4000/api/combination/${encodeURIComponent(reference)}`);\n    const comboParsed = parseXMLToObject(comboXML, 'combination');\n    if (comboParsed && comboParsed.id) {\n      prestaId = comboParsed.id;\n      isCombination = true;\n      // on récupère le parent pour les prix\n      const parentXML = await fetchXML(`http://localhost:4000/api/combination-full/${encodeURIComponent(reference)}`);\n      const parentParsed = parseXMLToObject(parentXML, 'product');\n      if (parentParsed) {\n        purchasePrice = parentParsed.wholesale_price;\n        salePrice = parentParsed.price;\n      } else {\n        // fallback sur combo\n        purchasePrice = comboParsed.wholesale_price;\n        salePrice = comboParsed.price;\n      }\n    }\n  }\n\n  // 4) Récupérer la quantité via API stock locale\n  if (prestaId) {\n    try {\n      const type = isCombination ? 'combination' : 'product';\n      const stockRes = await fetch(`http://localhost:4000/api/stock/${type}/${prestaId}`);\n      if (stockRes.ok) {\n        var _json$quantity;\n        const json = await stockRes.json();\n        stock = (_json$quantity = json.quantity) !== null && _json$quantity !== void 0 ? _json$quantity : 0;\n      }\n    } catch (e) {\n      console.warn('Erreur fetch stock:', e);\n    }\n  }\n\n  // 5) On renvoie **toujours** un objet, même si prestaId est null\n  return {\n    prestaId,\n    isCombination,\n    purchasePrice,\n    salePrice,\n    stock\n  };\n}\nfunction calcHT(ttc) {\n  return ttc;\n}\nfunction calcMargePourcentage(ht, achat) {\n  if (!ht || ht === 0) return '❌';\n  return ((ht - achat) / ht * 100).toFixed(1) + '%';\n}\nasync function updateStock(prestaId, quantity, currentStock, isCombination) {\n  try {\n    // 1. Appel à ton API proxy\n    const response = await fetch('http://localhost:4000/api/update-stock', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: prestaId,\n        quantity: quantity,\n        currentStock: currentStock,\n        isCombination: isCombination\n      })\n    });\n\n    // 2. On lit toujours le texte renvoyé, qu'il y ait un 200 ou pas\n    const text = await response.text();\n\n    // 3. Si ce n’est pas OK, on affiche le statut + le message PrestaShop\n    if (!response.ok) {\n      alert(`❌ Erreur de mise à jour (code ${response.status}) :\\n${text}`);\n      console.error('Détail erreur update-stock:', response.status, text);\n      return;\n    }\n\n    // 4. Succès\n    alert(`✅ Stock mis à jour (ID ${prestaId})\\nRéponse : ${text}`);\n    console.log('Update-stock OK :', response.status, text);\n  } catch (err) {\n    // 5. Erreur réseau ou code JS\n    alert(`❌ Exception lors de la mise à jour : ${err.message}`);\n    console.error('Exception updateStock:', err);\n  }\n}\nexport default function CommandeView() {\n  _s();\n  const [produits, setProduits] = useState([]);\n  const enrichWithAPI = async data => {\n    const enriched = await Promise.all(data.map(async item => {\n      var _apiData$isCombinatio, _apiData$quantity, _apiData$wholesale_pr;\n      const apiData = await fetchProductOrCombination(item.reference);\n      const prixHT = apiData ? calcHT(apiData.price) : null;\n      const tauxMarge = apiData ? calcMargePourcentage(prixHT, apiData.wholesale_price) : '❌';\n      return {\n        ...item,\n        prestaId: apiData === null || apiData === void 0 ? void 0 : apiData.id,\n        isCombination: (_apiData$isCombinatio = apiData === null || apiData === void 0 ? void 0 : apiData.isCombination) !== null && _apiData$isCombinatio !== void 0 ? _apiData$isCombinatio : false,\n        stock: (_apiData$quantity = apiData === null || apiData === void 0 ? void 0 : apiData.quantity) !== null && _apiData$quantity !== void 0 ? _apiData$quantity : '❌',\n        prixAchatPresta: (_apiData$wholesale_pr = apiData === null || apiData === void 0 ? void 0 : apiData.wholesale_price) !== null && _apiData$wholesale_pr !== void 0 ? _apiData$wholesale_pr : '❌',\n        prixVenteHT: prixHT !== null && prixHT !== void 0 ? prixHT : '❌',\n        tauxMarge: tauxMarge\n      };\n    }));\n    setProduits(enriched);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-7xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Commande Produits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CSVImporter, {\n      onDataLoaded: enrichWithAPI\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full bg-white border border-gray-300 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"R\\xE9f\\xE9rence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Nom du produit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Marque\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Prix (CSV)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Quantit\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Prix achat Presta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Prix vente HT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Taux de marge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: produits.map((prod, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-t\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: prod.reference\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: prod.titre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: prod.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: prod.prix.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: prod.quantite\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: prod.stock\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: typeof prod.prixAchatPresta === 'number' ? prod.prixAchatPresta.toFixed(2) : prod.prixAchatPresta\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: typeof prod.prixVenteHT === 'number' ? prod.prixVenteHT.toFixed(2) : prod.prixVenteHT\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: prod.tauxMarge\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-blue-600 text-white px-2 py-1 rounded hover:bg-blue-700\",\n                onClick: () => updateStock(prod.prestaId, prod.quantite, prod.stock, prod.isCombination),\n                children: \"MAJ Stock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_s(CommandeView, \"AjUil42FoNew40r9nrnsF1dN9/A=\");\n_c = CommandeView;\nvar _c;\n$RefreshReg$(_c, \"CommandeView\");","map":{"version":3,"names":["React","useState","CSVImporter","jsxDEV","_jsxDEV","parseXMLToObject","xmlString","type","parser","DOMParser","xml","parseFromString","item","querySelector","getText","tag","_item$querySelector","textContent","trim","id","wholesale_price","parseFloat","price","quantity","parseInt","fetchProductOrCombination","reference","t","_item$querySelector2","prestaId","isCombination","purchasePrice","salePrice","stock","fetchXML","url","res","fetch","ok","text","prodXML","encodeURIComponent","prodParsed","comboXML","comboParsed","parentXML","parentParsed","stockRes","_json$quantity","json","e","console","warn","calcHT","ttc","calcMargePourcentage","ht","achat","toFixed","updateStock","currentStock","response","method","headers","body","JSON","stringify","alert","status","error","log","err","message","CommandeView","_s","produits","setProduits","enrichWithAPI","data","enriched","Promise","all","map","_apiData$isCombinatio","_apiData$quantity","_apiData$wholesale_pr","apiData","prixHT","tauxMarge","prixAchatPresta","prixVenteHT","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDataLoaded","prod","idx","titre","brand","prix","quantite","onClick","_c","$RefreshReg$"],"sources":["/Users/valentinflausse/Desktop/Dossier Archerie/commande-app/src/components/CommandeView.jsx"],"sourcesContent":["\n// Code fourni par l'utilisateur\n\nimport React, { useState } from \"react\";\nimport CSVImporter from \"./CSVImporter\";\n\n// Assure-toi d'avoir parseXMLToObject défini plus haut, par exemple :\nfunction parseXMLToObject(xmlString, type = 'product') {\n  const parser = new DOMParser();\n  const xml = parser.parseFromString(xmlString, 'application/xml');\n  const item = xml.querySelector(type);\n  if (!item) return null;\n  const getText = tag => item.querySelector(tag)?.textContent.trim() || '';\n  return {\n    id:       getText('id'),\n    // Ces deux champs sont sous <wholesale_price> et <price> côté product, ou pas exposés côté combination\n    wholesale_price: parseFloat(getText('wholesale_price') || '0'),\n    price:    parseFloat(getText('price') || '0'),\n    quantity: parseInt(getText('quantity') || '0', 10)\n  };\n}\nasync function fetchProductOrCombination(reference) {\n  // Helper pour parser un <product> ou <combination> depuis un XML string\n  function parseXMLToObject(xmlString, tag) {\n    if (!xmlString) return null;\n    const parser = new DOMParser();\n    const xml = parser.parseFromString(xmlString, 'application/xml');\n    const item = xml.querySelector(tag);\n    if (!item) return null;\n    const getText = t => item.querySelector(t)?.textContent.trim() || '';\n    return {\n      id:              getText('id'),\n      wholesale_price: parseFloat(getText('wholesale_price') || '0'),\n      price:           parseFloat(getText('price') || '0'),\n      quantity:        parseInt(getText('quantity') || '0', 10)\n    };\n  }\n\n  // 1) Préparation\n  let prestaId       = null;\n  let isCombination  = false;\n  let purchasePrice  = 0;\n  let salePrice      = 0;\n  let stock          = 0;\n\n  const fetchXML = async url => {\n    try {\n      const res  = await fetch(url);\n      if (!res.ok) return null;\n      return await res.text();\n    } catch {\n      return null;\n    }\n  };\n\n  // 2) Tenter produit simple\n  const prodXML    = await fetchXML(`http://localhost:4000/api/product/${encodeURIComponent(reference)}`);\n  const prodParsed = parseXMLToObject(prodXML, 'product');\n  if (prodParsed && prodParsed.id) {\n    prestaId      = prodParsed.id;\n    purchasePrice = prodParsed.wholesale_price;\n    salePrice     = prodParsed.price;\n  } else {\n    // 3) Sinon tenter combination\n    const comboXML    = await fetchXML(`http://localhost:4000/api/combination/${encodeURIComponent(reference)}`);\n    const comboParsed = parseXMLToObject(comboXML, 'combination');\n    if (comboParsed && comboParsed.id) {\n      prestaId      = comboParsed.id;\n      isCombination = true;\n      // on récupère le parent pour les prix\n      const parentXML    = await fetchXML(`http://localhost:4000/api/combination-full/${encodeURIComponent(reference)}`);\n      const parentParsed = parseXMLToObject(parentXML, 'product');\n      if (parentParsed) {\n        purchasePrice = parentParsed.wholesale_price;\n        salePrice     = parentParsed.price;\n      } else {\n        // fallback sur combo\n        purchasePrice = comboParsed.wholesale_price;\n        salePrice     = comboParsed.price;\n      }\n    }\n  }\n\n  // 4) Récupérer la quantité via API stock locale\n  if (prestaId) {\n    try {\n      const type    = isCombination ? 'combination' : 'product';\n      const stockRes = await fetch(`http://localhost:4000/api/stock/${type}/${prestaId}`);\n      if (stockRes.ok) {\n        const json = await stockRes.json();\n        stock = json.quantity ?? 0;\n      }\n    } catch (e) {\n      console.warn('Erreur fetch stock:', e);\n    }\n  }\n\n  // 5) On renvoie **toujours** un objet, même si prestaId est null\n  return {\n    prestaId,\n    isCombination,\n    purchasePrice,\n    salePrice,\n    stock\n  };\n}\n\n\n\nfunction calcHT(ttc) {\n  return ttc;\n}\n\nfunction calcMargePourcentage(ht, achat) {\n  if (!ht || ht === 0) return '❌';\n  return (((ht - achat) / ht) * 100).toFixed(1) + '%';\n}\n\nasync function updateStock(prestaId, quantity, currentStock, isCombination) {\n  try {\n    // 1. Appel à ton API proxy\n    const response = await fetch('http://localhost:4000/api/update-stock', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        id: prestaId,\n        quantity: quantity,\n        currentStock: currentStock,\n        isCombination: isCombination,\n      }),\n    });\n\n    // 2. On lit toujours le texte renvoyé, qu'il y ait un 200 ou pas\n    const text = await response.text();\n\n    // 3. Si ce n’est pas OK, on affiche le statut + le message PrestaShop\n    if (!response.ok) {\n      alert(`❌ Erreur de mise à jour (code ${response.status}) :\\n${text}`);\n      console.error('Détail erreur update-stock:', response.status, text);\n      return;\n    }\n\n    // 4. Succès\n    alert(`✅ Stock mis à jour (ID ${prestaId})\\nRéponse : ${text}`);\n    console.log('Update-stock OK :', response.status, text);\n\n  } catch (err) {\n    // 5. Erreur réseau ou code JS\n    alert(`❌ Exception lors de la mise à jour : ${err.message}`);\n    console.error('Exception updateStock:', err);\n  }\n}\n\n\nexport default function CommandeView() {\n  const [produits, setProduits] = useState([]);\n\n  const enrichWithAPI = async (data) => {\n    const enriched = await Promise.all(\n      data.map(async (item) => {\n        const apiData = await fetchProductOrCombination(item.reference);\n        const prixHT = apiData ? calcHT(apiData.price) : null;\n        const tauxMarge = apiData ? calcMargePourcentage(prixHT, apiData.wholesale_price) : '❌';\n\n        return {\n          ...item,\n          prestaId: apiData?.id,\n          isCombination: apiData?.isCombination ?? false,\n          stock: apiData?.quantity ?? '❌',\n          prixAchatPresta: apiData?.wholesale_price ?? '❌',\n          prixVenteHT: prixHT ?? '❌',\n          tauxMarge: tauxMarge,\n        };\n      })\n    );\n    setProduits(enriched);\n  };\n\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto\">\n      <h1 className=\"text-3xl font-bold mb-6\">Commande Produits</h1>\n      <CSVImporter onDataLoaded={enrichWithAPI} />\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full bg-white border border-gray-300 rounded-lg\">\n          <thead className=\"bg-gray-100\">\n            <tr>\n              <th className=\"px-4 py-2 text-left\">Référence</th>\n              <th className=\"px-4 py-2 text-left\">Nom du produit</th>\n              <th className=\"px-4 py-2 text-left\">Marque</th>\n              <th className=\"px-4 py-2 text-left\">Prix (CSV)</th>\n              <th className=\"px-4 py-2 text-left\">Quantité</th>\n              <th className=\"px-4 py-2 text-left\">Stock</th>\n              <th className=\"px-4 py-2 text-left\">Prix achat Presta</th>\n              <th className=\"px-4 py-2 text-left\">Prix vente HT</th>\n              <th className=\"px-4 py-2 text-left\">Taux de marge</th>\n              <th className=\"px-4 py-2 text-left\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {produits.map((prod, idx) => (\n              <tr key={idx} className=\"border-t\">\n                <td className=\"px-4 py-2\">{prod.reference}</td>\n                <td className=\"px-4 py-2\">{prod.titre}</td>\n                <td className=\"px-4 py-2\">{prod.brand}</td>\n                <td className=\"px-4 py-2\">{prod.prix.toFixed(2)}</td>\n                <td className=\"px-4 py-2\">{prod.quantite}</td>\n                <td className=\"px-4 py-2\">{prod.stock}</td>\n                <td className=\"px-4 py-2\">{typeof prod.prixAchatPresta === 'number' ? prod.prixAchatPresta.toFixed(2) : prod.prixAchatPresta}</td>\n                <td className=\"px-4 py-2\">{typeof prod.prixVenteHT === 'number' ? prod.prixVenteHT.toFixed(2) : prod.prixVenteHT}</td>\n                <td className=\"px-4 py-2\">{prod.tauxMarge}</td>\n                <td className=\"px-4 py-2\">\n                  <button\n                    className=\"bg-blue-600 text-white px-2 py-1 rounded hover:bg-blue-700\"\n                    onClick={() => updateStock(prod.prestaId, prod.quantite, prod.stock, prod.isCombination)}\n                  >\n                    MAJ Stock\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}